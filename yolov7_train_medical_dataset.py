# -*- coding: utf-8 -*-
"""YOLOv7_train_medical_dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uc0RJyTgL-CPO57X9KDNul84ukhmjRc3

# Set up environment
"""

from google.colab import drive
drive.mount('/content/drive')

import os
import json

Base_Path = '/content/drive/MyDrive/BSc_Project/Kvasir-SEG'
Annots_Path = os.path.sep.join([Base_Path, 'annotation/_kavsir_bboxes.json'])
Image_Path = os.path.sep.join([Base_Path, 'images'])

print(Annots_Path)
print(Image_Path)

"""# Convert COCO format in to YOLO format"""

!git clone https://github.com/alexmihalyk23/COCO2YOLO.git

import json

with open('/content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/Train_700.json','r') as train:
  train = json.load(train)

with open('/content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/Val_300.json','r') as val:
  val = json.load(val)

import os
os.mkdir('/content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/train_yolo_2')
os.mkdir('/content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/val_yolo_2')

! python3 /content/yolov7/COCO2YOLO/COCO2YOLO.py -j /content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/Train_700.json -o /content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/train_yolo_2

print(len(os.listdir('/content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/train_yolo')))

Train_ann = os.listdir('/content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/train_yolo_2')
Train_image = os.listdir('/content/drive/MyDrive/BSc_Project/Train_700/images')

for image_name in Train_image:
  image_name = image_name.split('.')[0]
  image_name += '.txt'
  if image_name not in Train_ann:
    print('shit')
    print(image_name)

# ! python3 /content/yolov7/COCO2YOLO/COCO2YOLO.py -j /content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/Val_300.json -o '/content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/val_yolo_2'

Val_ann = os.listdir('/content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/val_yolo_2')
Val_image = os.listdir('/content/drive/MyDrive/BSc_Project/Val_300/images')

Button = True
for image_name in Val_image:
  image_name = image_name.split('.')[0]
  image_name += '.txt'
  if image_name not in Val_ann:
    print('shit')
    Button = False
print(Button)

# Validation
import shutil
shutil.copytree('/content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/val_yolo_2', '/content/drive/MyDrive/BSc_Project/Val_300/labels')

#Train
import shutil
shutil.copytree('/content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/train_yolo_2','/content/drive/MyDrive/BSc_Project/Train_700/labels')

print(len(os.listdir('/content/drive/MyDrive/BSc_Project/Train_700/labels')))
print(len(os.listdir('/content/drive/MyDrive/BSc_Project/Val_300/labels')))

# to check whehter names in labels and images is matched or not

import os

#train
image_train = os.listdir('/content/drive/MyDrive/BSc_Project/Train_700/images')
ann_train = os.listdir('/content/drive/MyDrive/BSc_Project/Train_700/labels')

print('image amount:', len(image_train))
print('ann_train:',len(ann_train))

for image_name in image_train:
  image_name = image_name.split('.')[0]
  image_name += '.txt'
  if image_name not in ann_train:
    print('shit')
    break

#validation
image_val = os.listdir('/content/drive/MyDrive/BSc_Project/Val_300/images')
ann_val = os.listdir('/content/drive/MyDrive/BSc_Project/Val_300/labels')

print('image amount:', len(image_val))
print('ann_train:',len(ann_val))

for image_name in image_val:
  image_name = image_name.split('.')[0]
  image_name += '.txt'
  if image_name not in ann_val:
    print('shit')
    break

non_image = []

for i in ann_train:
  name = i.split('.')[0]
  name += '.jpg'
  if name not in image_train:
    non_image.append(name)

print(len(non_image))
print(non_image)

import shutil

for image in non_image:
  shutil.copy('/content/drive/MyDrive/BSc_Project/Kvasir-SEG/images/'+image, '/content/drive/MyDrive/BSc_Project/Train_700/images')

image_train = os.listdir('/content/drive/MyDrive/BSc_Project/Train_700/images')
print(len(image_train))

for i in ann_train:
  name = i.split('.')[0]
  name += '.jpg'
  if name not in image_train:
    print(name)

"""# Train YOLO

Download YOLOv7 model
"""

!git clone https://github.com/WongKinYiu/yolov7.git

"""Make config for custom training"""

!pip install PyYAML
import yaml

Train_Path = 'Train_700/images/'
Val_Path = 'Val_300/images/'
Path = '/content/drive/MyDrive/BSc_Project/'

yaml_cfg = {'path':Path ,'train':Path + Train_Path,'val':Path + Val_Path,'test': Path + Val_Path,'nc':1,'names':{1:'polyp'}}

print(yaml_cfg)

with open('/content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/Custom_data.yaml', 'w') as file:
    yaml.dump(yaml_cfg, file, default_flow_style=False)
print('Done')

import shutil

shutil.copy('/content/drive/MyDrive/BSc_Project/Kvasir-SEG/annotation/Custom_data.yaml','/content/yolov7/data')

print('')

"""Train

Run Train
"""

!wget https://github.com/WongKinYiu/yolov7/releases/download/v0.1/yolov7.pt

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/yolov7
!python /content/yolov7/train.py --weights /content/yolov7/yolov7.pt --data "/content/yolov7/data/Custom_data.yaml" --workers 4 --batch-size 8 --img 320 --cfg cfg/training/yolov7.yaml --name tarin_700_result --hyp data/hyp.scratch.p5.yaml --epoch 150

import os
a = os.listdir('/content/drive/MyDrive/BSc_Project/Train_700/Images')
b = os.listdir('/content/drive/MyDrive/BSc_Project/Train_700/labels')

for i in a:
  i = i.split('.')[0]
  i += '.txt'
  if i not in b:
    print('shit')
    break

import shutil
shutil.copytree('/content/yolov7/runs/train/tarin_700_result12','/content/drive/MyDrive/BSc_Project/Code/Models_Medical/train700result')